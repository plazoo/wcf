//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Persistence.domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ApplicationDbContextSGO : DbContext
    {
        public ApplicationDbContextSGO()
            : base("name=ApplicationDbContextSGO")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CLIENTE> CLIENTE { get; set; }
        public virtual DbSet<COMPROBANTE_VENTA_CAB> COMPROBANTE_VENTA_CAB { get; set; }
        public virtual DbSet<COMPROBANTE_VENTA_DET> COMPROBANTE_VENTA_DET { get; set; }
        public virtual DbSet<COMPROBANTEVENTA_FILE> COMPROBANTEVENTA_FILE { get; set; }
        public virtual DbSet<COMPROBANTEVENTA_FILE_RESPONSE> COMPROBANTEVENTA_FILE_RESPONSE { get; set; }
        public virtual DbSet<COMPROBANTEVENTA_PROCESO> COMPROBANTEVENTA_PROCESO { get; set; }
        public virtual DbSet<ERRORINVOICE> ERRORINVOICE { get; set; }
        public virtual DbSet<COMPROBANTEVENTA_APROBACION> COMPROBANTEVENTA_APROBACION { get; set; }
        public virtual DbSet<PARAMETRO> PARAMETRO { get; set; }
        public virtual DbSet<CERTIFICADO_VSP> CERTIFICADO_VSP { get; set; }
        public virtual DbSet<CLIENTE_BANCO> CLIENTE_BANCO { get; set; }
        public virtual DbSet<CLIENTE_CERTIFICADO> CLIENTE_CERTIFICADO { get; set; }
        public virtual DbSet<CLIENTE_CONTACTO> CLIENTE_CONTACTO { get; set; }
        public virtual DbSet<GUIA_INGRESO_CAB> GUIA_INGRESO_CAB { get; set; }
        public virtual DbSet<GUIA_INGRESO_DET> GUIA_INGRESO_DET { get; set; }
        public virtual DbSet<SERVICIO_PRP_CABECERA> SERVICIO_PRP_CABECERA { get; set; }
        public virtual DbSet<SERVICIO_PRP_DETALLE> SERVICIO_PRP_DETALLE { get; set; }
        public virtual DbSet<TBL_LOG> TBL_LOG { get; set; }
        public virtual DbSet<TRASLADO_DET> TRASLADO_DET { get; set; }
        public virtual DbSet<TRASLADO_CAB> TRASLADO_CAB { get; set; }
        public virtual DbSet<TICKET_PESADA> TICKET_PESADA { get; set; }
        public virtual DbSet<AREA> AREA { get; set; }
        public virtual DbSet<BANCO> BANCO { get; set; }
        public virtual DbSet<CAJACHICA> CAJACHICA { get; set; }
        public virtual DbSet<CAJACHICA_CIERRE> CAJACHICA_CIERRE { get; set; }
        public virtual DbSet<CAJACHICA_SALDO> CAJACHICA_SALDO { get; set; }
        public virtual DbSet<CAJACHICA_TIPODOCUMENTO> CAJACHICA_TIPODOCUMENTO { get; set; }
        public virtual DbSet<CARGO> CARGO { get; set; }
        public virtual DbSet<CATALOGO_CUENTA_CONTABLE> CATALOGO_CUENTA_CONTABLE { get; set; }
        public virtual DbSet<CBANCO_TRABAJADOR> CBANCO_TRABAJADOR { get; set; }
        public virtual DbSet<CERTIFICADO_SALDO> CERTIFICADO_SALDO { get; set; }
        public virtual DbSet<CERTIFICADO_SALDO_HISTORY> CERTIFICADO_SALDO_HISTORY { get; set; }
        public virtual DbSet<CIERRE_ANUAL> CIERRE_ANUAL { get; set; }
        public virtual DbSet<CIERRE_CONTRATO> CIERRE_CONTRATO { get; set; }
        public virtual DbSet<CIERRE_GUIAINGRESO> CIERRE_GUIAINGRESO { get; set; }
        public virtual DbSet<CIERRE_KARDEX> CIERRE_KARDEX { get; set; }
        public virtual DbSet<CIERRE_LIQUIDACION> CIERRE_LIQUIDACION { get; set; }
        public virtual DbSet<CIERRE_OTORGADO> CIERRE_OTORGADO { get; set; }
        public virtual DbSet<CIERRE_SERVICIO> CIERRE_SERVICIO { get; set; }
        public virtual DbSet<CLIENTE_COSECHA> CLIENTE_COSECHA { get; set; }
        public virtual DbSet<CLIENTE_GARANTIA> CLIENTE_GARANTIA { get; set; }
        public virtual DbSet<CLIENTE_LIMITE> CLIENTE_LIMITE { get; set; }
        public virtual DbSet<CLIENTEINHABILITADO> CLIENTEINHABILITADO { get; set; }
        public virtual DbSet<CONTRATO_COMPRA> CONTRATO_COMPRA { get; set; }
        public virtual DbSet<CONTRATO_COMPRA_HISTORICO> CONTRATO_COMPRA_HISTORICO { get; set; }
        public virtual DbSet<CONTRATO_COMPRA_SWITCH> CONTRATO_COMPRA_SWITCH { get; set; }
        public virtual DbSet<CONTRATO_COMPRA_UNFIXED> CONTRATO_COMPRA_UNFIXED { get; set; }
        public virtual DbSet<CONTRATO_COMPRA_ZONA> CONTRATO_COMPRA_ZONA { get; set; }
        public virtual DbSet<CONTRATO_ZONA_OUT> CONTRATO_ZONA_OUT { get; set; }
        public virtual DbSet<CONTRATO_ZONA_SWITCH> CONTRATO_ZONA_SWITCH { get; set; }
        public virtual DbSet<CONTRATO_ZONA_UNFIXED> CONTRATO_ZONA_UNFIXED { get; set; }
        public virtual DbSet<CORREO> CORREO { get; set; }
        public virtual DbSet<CUENTA_BANCO> CUENTA_BANCO { get; set; }
        public virtual DbSet<DEPARTAMENTO> DEPARTAMENTO { get; set; }
        public virtual DbSet<DOCUMENTO_OPERACION> DOCUMENTO_OPERACION { get; set; }
        public virtual DbSet<ESTADO> ESTADO { get; set; }
        public virtual DbSet<GASTO_APROBACION> GASTO_APROBACION { get; set; }
        public virtual DbSet<GASTO_CENTRO_COSTO> GASTO_CENTRO_COSTO { get; set; }
        public virtual DbSet<GASTO_MOVILIDAD_CAB> GASTO_MOVILIDAD_CAB { get; set; }
        public virtual DbSet<GASTO_MOVILIDAD_DET> GASTO_MOVILIDAD_DET { get; set; }
        public virtual DbSet<GASTO_PRP_CAB> GASTO_PRP_CAB { get; set; }
        public virtual DbSet<GASTO_PRP_DET> GASTO_PRP_DET { get; set; }
        public virtual DbSet<GASTO_RECIBO_MOVILIDAD> GASTO_RECIBO_MOVILIDAD { get; set; }
        public virtual DbSet<GUIA_INGRESO_SALDO> GUIA_INGRESO_SALDO { get; set; }
        public virtual DbSet<IDIOMA> IDIOMA { get; set; }
        public virtual DbSet<LABORATORIO> LABORATORIO { get; set; }
        public virtual DbSet<LABORATORIO_DEFECTO> LABORATORIO_DEFECTO { get; set; }
        public virtual DbSet<LABORATORIO_REFERENCIA> LABORATORIO_REFERENCIA { get; set; }
        public virtual DbSet<LIQUIDACION_COMPRA_CAB> LIQUIDACION_COMPRA_CAB { get; set; }
        public virtual DbSet<LIQUIDACION_COMPRA_DET> LIQUIDACION_COMPRA_DET { get; set; }
        public virtual DbSet<LIQUIDACION_COMPRA_SALDO> LIQUIDACION_COMPRA_SALDO { get; set; }
        public virtual DbSet<MODULO_COMPARTIDO_USUARIO> MODULO_COMPARTIDO_USUARIO { get; set; }
        public virtual DbSet<MOTIVO_VISITA> MOTIVO_VISITA { get; set; }
        public virtual DbSet<ODCS_ESTADOS> ODCS_ESTADOS { get; set; }
        public virtual DbSet<ODCS_HISTORICO> ODCS_HISTORICO { get; set; }
        public virtual DbSet<ODCS_PROVEEDOR> ODCS_PROVEEDOR { get; set; }
        public virtual DbSet<ORDEN_COMPRA_CAB> ORDEN_COMPRA_CAB { get; set; }
        public virtual DbSet<ORDEN_COMPRA_DET> ORDEN_COMPRA_DET { get; set; }
        public virtual DbSet<OTORGADO_SALDO_INICIAL> OTORGADO_SALDO_INICIAL { get; set; }
        public virtual DbSet<OTORGADO_ZONA> OTORGADO_ZONA { get; set; }
        public virtual DbSet<OTORGADO_ZONA_DET> OTORGADO_ZONA_DET { get; set; }
        public virtual DbSet<PRECIO_BOLSA> PRECIO_BOLSA { get; set; }
        public virtual DbSet<PRECIO_DIA> PRECIO_DIA { get; set; }
        public virtual DbSet<PROVINCIA> PROVINCIA { get; set; }
        public virtual DbSet<REGION> REGION { get; set; }
        public virtual DbSet<RESUMEN_COMPRA_CLIENTE> RESUMEN_COMPRA_CLIENTE { get; set; }
        public virtual DbSet<RESUMEN_COMPRA_CLIENTE_DETALLE> RESUMEN_COMPRA_CLIENTE_DETALLE { get; set; }
        public virtual DbSet<RESUMEN_COMPRA_CLIENTE_DETALLE_TEMP> RESUMEN_COMPRA_CLIENTE_DETALLE_TEMP { get; set; }
        public virtual DbSet<RESUMEN_COMPRA_CLIENTE_TEMP> RESUMEN_COMPRA_CLIENTE_TEMP { get; set; }
        public virtual DbSet<SERVICIO_PRP_ELIMINADO> SERVICIO_PRP_ELIMINADO { get; set; }
        public virtual DbSet<SERVICIO_PRP_RESULTADO> SERVICIO_PRP_RESULTADO { get; set; }
        public virtual DbSet<SITUACION_HIPOTECA> SITUACION_HIPOTECA { get; set; }
        public virtual DbSet<SOLICITUD_VISITA> SOLICITUD_VISITA { get; set; }
        public virtual DbSet<TBL_ARCHIVO_CARGAMASIVA> TBL_ARCHIVO_CARGAMASIVA { get; set; }
        public virtual DbSet<TIPO_AGENTE> TIPO_AGENTE { get; set; }
        public virtual DbSet<TIPO_ARBITRAJE> TIPO_ARBITRAJE { get; set; }
        public virtual DbSet<TIPO_BLACKLIST> TIPO_BLACKLIST { get; set; }
        public virtual DbSet<TIPO_CAFE> TIPO_CAFE { get; set; }
        public virtual DbSet<TIPO_CAJA_CHICA_ZONA> TIPO_CAJA_CHICA_ZONA { get; set; }
        public virtual DbSet<TIPO_CALIDAD> TIPO_CALIDAD { get; set; }
        public virtual DbSet<TIPO_CALIDAD_LABORATORIO> TIPO_CALIDAD_LABORATORIO { get; set; }
        public virtual DbSet<TIPO_CALIDAD_PRECIO> TIPO_CALIDAD_PRECIO { get; set; }
        public virtual DbSet<TIPO_CAMBIO_OPERACION> TIPO_CAMBIO_OPERACION { get; set; }
        public virtual DbSet<TIPO_CLIENTE> TIPO_CLIENTE { get; set; }
        public virtual DbSet<TIPO_COMPRA> TIPO_COMPRA { get; set; }
        public virtual DbSet<TIPO_COND_PAGO> TIPO_COND_PAGO { get; set; }
        public virtual DbSet<TIPO_CONTROL_BASE> TIPO_CONTROL_BASE { get; set; }
        public virtual DbSet<TIPO_COSECHA> TIPO_COSECHA { get; set; }
        public virtual DbSet<TIPO_DEFECTO> TIPO_DEFECTO { get; set; }
        public virtual DbSet<TIPO_DESTINO> TIPO_DESTINO { get; set; }
        public virtual DbSet<TIPO_DIFERENCIAL> TIPO_DIFERENCIAL { get; set; }
        public virtual DbSet<TIPO_DOCUMENTO> TIPO_DOCUMENTO { get; set; }
        public virtual DbSet<TIPO_DSA> TIPO_DSA { get; set; }
        public virtual DbSet<TIPO_ESTADO> TIPO_ESTADO { get; set; }
        public virtual DbSet<TIPO_FIJADOR> TIPO_FIJADOR { get; set; }
        public virtual DbSet<TIPO_GARANTIA> TIPO_GARANTIA { get; set; }
        public virtual DbSet<TIPO_INMUEBLE> TIPO_INMUEBLE { get; set; }
        public virtual DbSet<TIPO_MES_FIJACION> TIPO_MES_FIJACION { get; set; }
        public virtual DbSet<TIPO_MODALIDAD_OTORGADO> TIPO_MODALIDAD_OTORGADO { get; set; }
        public virtual DbSet<TIPO_MONEDA> TIPO_MONEDA { get; set; }
        public virtual DbSet<TIPO_MOTIVO_OTORGADO> TIPO_MOTIVO_OTORGADO { get; set; }
        public virtual DbSet<TIPO_ORIGEN> TIPO_ORIGEN { get; set; }
        public virtual DbSet<TIPO_PRECIO> TIPO_PRECIO { get; set; }
        public virtual DbSet<TIPO_REGLAS_PESO> TIPO_REGLAS_PESO { get; set; }
        public virtual DbSet<TIPO_RENDIMIENTO> TIPO_RENDIMIENTO { get; set; }
        public virtual DbSet<TIPO_RUMA> TIPO_RUMA { get; set; }
        public virtual DbSet<TIPO_SACO> TIPO_SACO { get; set; }
        public virtual DbSet<TIPO_SEGUNDA> TIPO_SEGUNDA { get; set; }
        public virtual DbSet<TIPO_SERIE_COMPRA> TIPO_SERIE_COMPRA { get; set; }
        public virtual DbSet<TIPO_SERIE_VENTA> TIPO_SERIE_VENTA { get; set; }
        public virtual DbSet<TIPO_SERVICIO> TIPO_SERVICIO { get; set; }
        public virtual DbSet<TIPO_TAZA> TIPO_TAZA { get; set; }
        public virtual DbSet<TIPO_TERMINO_ENTREGA> TIPO_TERMINO_ENTREGA { get; set; }
        public virtual DbSet<TIPO_TITULO_VALOR> TIPO_TITULO_VALOR { get; set; }
        public virtual DbSet<TIPO_TRADER> TIPO_TRADER { get; set; }
        public virtual DbSet<TIPO_UNIDAD_MEDIDA> TIPO_UNIDAD_MEDIDA { get; set; }
        public virtual DbSet<TIPO_VALUACION> TIPO_VALUACION { get; set; }
        public virtual DbSet<TIPO_VISITA> TIPO_VISITA { get; set; }
        public virtual DbSet<TRABAJADOR_PRP> TRABAJADOR_PRP { get; set; }
        public virtual DbSet<TRABAJADOR_PRP_JEFATURA> TRABAJADOR_PRP_JEFATURA { get; set; }
        public virtual DbSet<TRASLADO_CHOFER> TRASLADO_CHOFER { get; set; }
        public virtual DbSet<TRASLADO_EMPRESA> TRASLADO_EMPRESA { get; set; }
        public virtual DbSet<TRASLADO_MOTIVO> TRASLADO_MOTIVO { get; set; }
        public virtual DbSet<TRASLADO_SALDO> TRASLADO_SALDO { get; set; }
        public virtual DbSet<TRASLADO_ZONA> TRASLADO_ZONA { get; set; }
        public virtual DbSet<DISTRITO> DISTRITO { get; set; }
        public virtual DbSet<GUIA_INGRESO_CAB_BK> GUIA_INGRESO_CAB_BK { get; set; }
        public virtual DbSet<GUIA_INGRESO_DET_BK> GUIA_INGRESO_DET_BK { get; set; }
        public virtual DbSet<GUIA_INGRESO_SALDO_BK> GUIA_INGRESO_SALDO_BK { get; set; }
        public virtual DbSet<ODCS_PROVEEDOR_BANCO> ODCS_PROVEEDOR_BANCO { get; set; }
        public virtual DbSet<OTORGADO_ZONA_BK> OTORGADO_ZONA_BK { get; set; }
        public virtual DbSet<SERVICIO_PRP_CABECERA_BK> SERVICIO_PRP_CABECERA_BK { get; set; }
        public virtual DbSet<tbl_prueba> tbl_prueba { get; set; }
        public virtual DbSet<TICKET_PESADA_BK> TICKET_PESADA_BK { get; set; }
        public virtual DbSet<TRASLADO_DESPACHOCAFE> TRASLADO_DESPACHOCAFE { get; set; }
    
        public virtual ObjectResult<ComprobanteVentaFilePorId> usp_LisComprobanteVentaFilePorId(Nullable<int> idComprobante)
        {
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteVentaFilePorId>("usp_LisComprobanteVentaFilePorId", idComprobanteParameter);
        }
    
        public virtual ObjectResult<ComprobanteVenta> usp_ReporteComprobanteVenta(Nullable<int> idComprobante)
        {
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("idComprobante", idComprobante) :
                new ObjectParameter("idComprobante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteVenta>("usp_ReporteComprobanteVenta", idComprobanteParameter);
        }
    
        public virtual ObjectResult<ComprobanteCliente> usp_LisComprobanteCliente(string nroDocumentoCliente, string tipoComprobante, string correlativo)
        {
            var nroDocumentoClienteParameter = nroDocumentoCliente != null ?
                new ObjectParameter("NroDocumentoCliente", nroDocumentoCliente) :
                new ObjectParameter("NroDocumentoCliente", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var correlativoParameter = correlativo != null ?
                new ObjectParameter("Correlativo", correlativo) :
                new ObjectParameter("Correlativo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteCliente>("usp_LisComprobanteCliente", nroDocumentoClienteParameter, tipoComprobanteParameter, correlativoParameter);
        }
    
        public virtual ObjectResult<ClienteExiste> usp_LisClienteExiste(string nroDocumento)
        {
            var nroDocumentoParameter = nroDocumento != null ?
                new ObjectParameter("NroDocumento", nroDocumento) :
                new ObjectParameter("NroDocumento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClienteExiste>("usp_LisClienteExiste", nroDocumentoParameter);
        }
    
        public virtual ObjectResult<ComprobanteCliente> usp_LisIdComprobanteCliente(Nullable<int> idComprobante)
        {
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteCliente>("usp_LisIdComprobanteCliente", idComprobanteParameter);
        }
    
        public virtual int usp_INS_TBL_LOG(string vcException, Nullable<int> idUsuario)
        {
            var vcExceptionParameter = vcException != null ?
                new ObjectParameter("vcException", vcException) :
                new ObjectParameter("vcException", typeof(string));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_INS_TBL_LOG", vcExceptionParameter, idUsuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_InsGuiaIngresoCabecera(Nullable<int> tipoOperacion, Nullable<int> idGuia, string idLocal, Nullable<int> idCliente, Nullable<int> idContactoCliente, string rumaDestino, Nullable<int> totalSaco, Nullable<decimal> totalKgBruto, Nullable<decimal> totalTara, Nullable<decimal> totalDsctoAgua, Nullable<decimal> totalKgNeto, Nullable<int> idEstado, Nullable<int> idDivision, Nullable<int> idProceso, string usuarioRegistro, string idCertificadoVSP, string descCertificacion, string modalidadIngreso, Nullable<int> idIngresoPRP, Nullable<int> idOficinaOrigen, Nullable<int> idTraslado, string guiaRemisionExterna, Nullable<int> idClienteTrazabilidad, Nullable<int> idTrasladoFila, Nullable<int> idTipoCafe, string observacion, Nullable<int> idContrato, string cosecha)
        {
            var tipoOperacionParameter = tipoOperacion.HasValue ?
                new ObjectParameter("TipoOperacion", tipoOperacion) :
                new ObjectParameter("TipoOperacion", typeof(int));
    
            var idGuiaParameter = idGuia.HasValue ?
                new ObjectParameter("IdGuia", idGuia) :
                new ObjectParameter("IdGuia", typeof(int));
    
            var idLocalParameter = idLocal != null ?
                new ObjectParameter("IdLocal", idLocal) :
                new ObjectParameter("IdLocal", typeof(string));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idContactoClienteParameter = idContactoCliente.HasValue ?
                new ObjectParameter("IdContactoCliente", idContactoCliente) :
                new ObjectParameter("IdContactoCliente", typeof(int));
    
            var rumaDestinoParameter = rumaDestino != null ?
                new ObjectParameter("RumaDestino", rumaDestino) :
                new ObjectParameter("RumaDestino", typeof(string));
    
            var totalSacoParameter = totalSaco.HasValue ?
                new ObjectParameter("TotalSaco", totalSaco) :
                new ObjectParameter("TotalSaco", typeof(int));
    
            var totalKgBrutoParameter = totalKgBruto.HasValue ?
                new ObjectParameter("TotalKgBruto", totalKgBruto) :
                new ObjectParameter("TotalKgBruto", typeof(decimal));
    
            var totalTaraParameter = totalTara.HasValue ?
                new ObjectParameter("TotalTara", totalTara) :
                new ObjectParameter("TotalTara", typeof(decimal));
    
            var totalDsctoAguaParameter = totalDsctoAgua.HasValue ?
                new ObjectParameter("TotalDsctoAgua", totalDsctoAgua) :
                new ObjectParameter("TotalDsctoAgua", typeof(decimal));
    
            var totalKgNetoParameter = totalKgNeto.HasValue ?
                new ObjectParameter("TotalKgNeto", totalKgNeto) :
                new ObjectParameter("TotalKgNeto", typeof(decimal));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var idDivisionParameter = idDivision.HasValue ?
                new ObjectParameter("IdDivision", idDivision) :
                new ObjectParameter("IdDivision", typeof(int));
    
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("IdProceso", idProceso) :
                new ObjectParameter("IdProceso", typeof(int));
    
            var usuarioRegistroParameter = usuarioRegistro != null ?
                new ObjectParameter("UsuarioRegistro", usuarioRegistro) :
                new ObjectParameter("UsuarioRegistro", typeof(string));
    
            var idCertificadoVSPParameter = idCertificadoVSP != null ?
                new ObjectParameter("IdCertificadoVSP", idCertificadoVSP) :
                new ObjectParameter("IdCertificadoVSP", typeof(string));
    
            var descCertificacionParameter = descCertificacion != null ?
                new ObjectParameter("DescCertificacion", descCertificacion) :
                new ObjectParameter("DescCertificacion", typeof(string));
    
            var modalidadIngresoParameter = modalidadIngreso != null ?
                new ObjectParameter("ModalidadIngreso", modalidadIngreso) :
                new ObjectParameter("ModalidadIngreso", typeof(string));
    
            var idIngresoPRPParameter = idIngresoPRP.HasValue ?
                new ObjectParameter("IdIngresoPRP", idIngresoPRP) :
                new ObjectParameter("IdIngresoPRP", typeof(int));
    
            var idOficinaOrigenParameter = idOficinaOrigen.HasValue ?
                new ObjectParameter("IdOficinaOrigen", idOficinaOrigen) :
                new ObjectParameter("IdOficinaOrigen", typeof(int));
    
            var idTrasladoParameter = idTraslado.HasValue ?
                new ObjectParameter("IdTraslado", idTraslado) :
                new ObjectParameter("IdTraslado", typeof(int));
    
            var guiaRemisionExternaParameter = guiaRemisionExterna != null ?
                new ObjectParameter("GuiaRemisionExterna", guiaRemisionExterna) :
                new ObjectParameter("GuiaRemisionExterna", typeof(string));
    
            var idClienteTrazabilidadParameter = idClienteTrazabilidad.HasValue ?
                new ObjectParameter("IdClienteTrazabilidad", idClienteTrazabilidad) :
                new ObjectParameter("IdClienteTrazabilidad", typeof(int));
    
            var idTrasladoFilaParameter = idTrasladoFila.HasValue ?
                new ObjectParameter("IdTrasladoFila", idTrasladoFila) :
                new ObjectParameter("IdTrasladoFila", typeof(int));
    
            var idTipoCafeParameter = idTipoCafe.HasValue ?
                new ObjectParameter("IdTipoCafe", idTipoCafe) :
                new ObjectParameter("IdTipoCafe", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var cosechaParameter = cosecha != null ?
                new ObjectParameter("cosecha", cosecha) :
                new ObjectParameter("cosecha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_InsGuiaIngresoCabecera", tipoOperacionParameter, idGuiaParameter, idLocalParameter, idClienteParameter, idContactoClienteParameter, rumaDestinoParameter, totalSacoParameter, totalKgBrutoParameter, totalTaraParameter, totalDsctoAguaParameter, totalKgNetoParameter, idEstadoParameter, idDivisionParameter, idProcesoParameter, usuarioRegistroParameter, idCertificadoVSPParameter, descCertificacionParameter, modalidadIngresoParameter, idIngresoPRPParameter, idOficinaOrigenParameter, idTrasladoParameter, guiaRemisionExternaParameter, idClienteTrazabilidadParameter, idTrasladoFilaParameter, idTipoCafeParameter, observacionParameter, idContratoParameter, cosechaParameter);
        }
    
        public virtual int usp_InsTicketPesada(Nullable<int> oPCION, Nullable<int> cODIGO, Nullable<int> cOSECHA, Nullable<int> iDCLIENTE, Nullable<int> iDCONTACTOCLIENTE, string iDLOCAL, string fECHATICKET, Nullable<int> iDLABORATORIO, Nullable<int> nROSACO, Nullable<int> iDSACO, Nullable<decimal> pESOSACO, Nullable<decimal> tARA, Nullable<decimal> kGBRUTO, Nullable<decimal> kGNETO, Nullable<decimal> dSCTOAGUA, Nullable<decimal> kGSECO, Nullable<int> iDPROCESO, string oBSERVACIONES, Nullable<int> iDESTADO, string uSUARIOREGISTRO, Nullable<int> iDTIPOCAFE, string iDGUIAREMISION, string gUIAREMISION)
        {
            var oPCIONParameter = oPCION.HasValue ?
                new ObjectParameter("OPCION", oPCION) :
                new ObjectParameter("OPCION", typeof(int));
    
            var cODIGOParameter = cODIGO.HasValue ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(int));
    
            var cOSECHAParameter = cOSECHA.HasValue ?
                new ObjectParameter("COSECHA", cOSECHA) :
                new ObjectParameter("COSECHA", typeof(int));
    
            var iDCLIENTEParameter = iDCLIENTE.HasValue ?
                new ObjectParameter("IDCLIENTE", iDCLIENTE) :
                new ObjectParameter("IDCLIENTE", typeof(int));
    
            var iDCONTACTOCLIENTEParameter = iDCONTACTOCLIENTE.HasValue ?
                new ObjectParameter("IDCONTACTOCLIENTE", iDCONTACTOCLIENTE) :
                new ObjectParameter("IDCONTACTOCLIENTE", typeof(int));
    
            var iDLOCALParameter = iDLOCAL != null ?
                new ObjectParameter("IDLOCAL", iDLOCAL) :
                new ObjectParameter("IDLOCAL", typeof(string));
    
            var fECHATICKETParameter = fECHATICKET != null ?
                new ObjectParameter("FECHATICKET", fECHATICKET) :
                new ObjectParameter("FECHATICKET", typeof(string));
    
            var iDLABORATORIOParameter = iDLABORATORIO.HasValue ?
                new ObjectParameter("IDLABORATORIO", iDLABORATORIO) :
                new ObjectParameter("IDLABORATORIO", typeof(int));
    
            var nROSACOParameter = nROSACO.HasValue ?
                new ObjectParameter("NROSACO", nROSACO) :
                new ObjectParameter("NROSACO", typeof(int));
    
            var iDSACOParameter = iDSACO.HasValue ?
                new ObjectParameter("IDSACO", iDSACO) :
                new ObjectParameter("IDSACO", typeof(int));
    
            var pESOSACOParameter = pESOSACO.HasValue ?
                new ObjectParameter("PESOSACO", pESOSACO) :
                new ObjectParameter("PESOSACO", typeof(decimal));
    
            var tARAParameter = tARA.HasValue ?
                new ObjectParameter("TARA", tARA) :
                new ObjectParameter("TARA", typeof(decimal));
    
            var kGBRUTOParameter = kGBRUTO.HasValue ?
                new ObjectParameter("KGBRUTO", kGBRUTO) :
                new ObjectParameter("KGBRUTO", typeof(decimal));
    
            var kGNETOParameter = kGNETO.HasValue ?
                new ObjectParameter("KGNETO", kGNETO) :
                new ObjectParameter("KGNETO", typeof(decimal));
    
            var dSCTOAGUAParameter = dSCTOAGUA.HasValue ?
                new ObjectParameter("DSCTOAGUA", dSCTOAGUA) :
                new ObjectParameter("DSCTOAGUA", typeof(decimal));
    
            var kGSECOParameter = kGSECO.HasValue ?
                new ObjectParameter("KGSECO", kGSECO) :
                new ObjectParameter("KGSECO", typeof(decimal));
    
            var iDPROCESOParameter = iDPROCESO.HasValue ?
                new ObjectParameter("IDPROCESO", iDPROCESO) :
                new ObjectParameter("IDPROCESO", typeof(int));
    
            var oBSERVACIONESParameter = oBSERVACIONES != null ?
                new ObjectParameter("OBSERVACIONES", oBSERVACIONES) :
                new ObjectParameter("OBSERVACIONES", typeof(string));
    
            var iDESTADOParameter = iDESTADO.HasValue ?
                new ObjectParameter("IDESTADO", iDESTADO) :
                new ObjectParameter("IDESTADO", typeof(int));
    
            var uSUARIOREGISTROParameter = uSUARIOREGISTRO != null ?
                new ObjectParameter("USUARIOREGISTRO", uSUARIOREGISTRO) :
                new ObjectParameter("USUARIOREGISTRO", typeof(string));
    
            var iDTIPOCAFEParameter = iDTIPOCAFE.HasValue ?
                new ObjectParameter("IDTIPOCAFE", iDTIPOCAFE) :
                new ObjectParameter("IDTIPOCAFE", typeof(int));
    
            var iDGUIAREMISIONParameter = iDGUIAREMISION != null ?
                new ObjectParameter("IDGUIAREMISION", iDGUIAREMISION) :
                new ObjectParameter("IDGUIAREMISION", typeof(string));
    
            var gUIAREMISIONParameter = gUIAREMISION != null ?
                new ObjectParameter("GUIAREMISION", gUIAREMISION) :
                new ObjectParameter("GUIAREMISION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsTicketPesada", oPCIONParameter, cODIGOParameter, cOSECHAParameter, iDCLIENTEParameter, iDCONTACTOCLIENTEParameter, iDLOCALParameter, fECHATICKETParameter, iDLABORATORIOParameter, nROSACOParameter, iDSACOParameter, pESOSACOParameter, tARAParameter, kGBRUTOParameter, kGNETOParameter, dSCTOAGUAParameter, kGSECOParameter, iDPROCESOParameter, oBSERVACIONESParameter, iDESTADOParameter, uSUARIOREGISTROParameter, iDTIPOCAFEParameter, iDGUIAREMISIONParameter, gUIAREMISIONParameter);
        }
    
        public virtual ObjectResult<usp_LisBusquedaClienteFiltro_Result> usp_LisBusquedaClienteFiltro(string fILTRO)
        {
            var fILTROParameter = fILTRO != null ?
                new ObjectParameter("FILTRO", fILTRO) :
                new ObjectParameter("FILTRO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisBusquedaClienteFiltro_Result>("usp_LisBusquedaClienteFiltro", fILTROParameter);
        }
    
        public virtual ObjectResult<usp_LisComboSacoCafe_Result> usp_LisComboSacoCafe(string eSTADO)
        {
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisComboSacoCafe_Result>("usp_LisComboSacoCafe", eSTADOParameter);
        }
    
        public virtual ObjectResult<usp_LisDatoGuiaIngresoZona_Result> usp_LisDatoGuiaIngresoZona(string idGuiaIngreso)
        {
            var idGuiaIngresoParameter = idGuiaIngreso != null ?
                new ObjectParameter("IdGuiaIngreso", idGuiaIngreso) :
                new ObjectParameter("IdGuiaIngreso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisDatoGuiaIngresoZona_Result>("usp_LisDatoGuiaIngresoZona", idGuiaIngresoParameter);
        }
    
        public virtual ObjectResult<usp_LisGuiaIngresoDetalle_Result> usp_LisGuiaIngresoDetalle(Nullable<int> iDGUIA)
        {
            var iDGUIAParameter = iDGUIA.HasValue ?
                new ObjectParameter("IDGUIA", iDGUIA) :
                new ObjectParameter("IDGUIA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisGuiaIngresoDetalle_Result>("usp_LisGuiaIngresoDetalle", iDGUIAParameter);
        }
    
        public virtual ObjectResult<usp_LisGuiaIngresoEditar_Result> usp_LisGuiaIngresoEditar(Nullable<int> iDGUIA)
        {
            var iDGUIAParameter = iDGUIA.HasValue ?
                new ObjectParameter("IDGUIA", iDGUIA) :
                new ObjectParameter("IDGUIA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisGuiaIngresoEditar_Result>("usp_LisGuiaIngresoEditar", iDGUIAParameter);
        }
    
        public virtual ObjectResult<usp_LisGuiaIngresoZona_Result> usp_LisGuiaIngresoZona(string eSTADO, string fILTRO, string iDLOCAL, string fechaInicio, string fechaFin)
        {
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var fILTROParameter = fILTRO != null ?
                new ObjectParameter("FILTRO", fILTRO) :
                new ObjectParameter("FILTRO", typeof(string));
    
            var iDLOCALParameter = iDLOCAL != null ?
                new ObjectParameter("IDLOCAL", iDLOCAL) :
                new ObjectParameter("IDLOCAL", typeof(string));
    
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisGuiaIngresoZona_Result>("usp_LisGuiaIngresoZona", eSTADOParameter, fILTROParameter, iDLOCALParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<usp_LisLaboratorioDisponibleXCliente_Result> usp_LisLaboratorioDisponibleXCliente(Nullable<int> idCliente, string idLocal)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idLocalParameter = idLocal != null ?
                new ObjectParameter("idLocal", idLocal) :
                new ObjectParameter("idLocal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisLaboratorioDisponibleXCliente_Result>("usp_LisLaboratorioDisponibleXCliente", idClienteParameter, idLocalParameter);
        }
    
        public virtual ObjectResult<usp_LisRecepcionGuiaRemisionZona_Result> usp_LisRecepcionGuiaRemisionZona(string iDLOCAL)
        {
            var iDLOCALParameter = iDLOCAL != null ?
                new ObjectParameter("IDLOCAL", iDLOCAL) :
                new ObjectParameter("IDLOCAL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisRecepcionGuiaRemisionZona_Result>("usp_LisRecepcionGuiaRemisionZona", iDLOCALParameter);
        }
    
        public virtual ObjectResult<usp_LisSaldoCertificado_Result> usp_LisSaldoCertificado(Nullable<int> iDCLIENTE, Nullable<int> cOSECHA)
        {
            var iDCLIENTEParameter = iDCLIENTE.HasValue ?
                new ObjectParameter("IDCLIENTE", iDCLIENTE) :
                new ObjectParameter("IDCLIENTE", typeof(int));
    
            var cOSECHAParameter = cOSECHA.HasValue ?
                new ObjectParameter("COSECHA", cOSECHA) :
                new ObjectParameter("COSECHA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisSaldoCertificado_Result>("usp_LisSaldoCertificado", iDCLIENTEParameter, cOSECHAParameter);
        }
    
        public virtual ObjectResult<usp_ListadoDetalleRemision_Result> usp_ListadoDetalleRemision(Nullable<int> iDTRASLADO)
        {
            var iDTRASLADOParameter = iDTRASLADO.HasValue ?
                new ObjectParameter("IDTRASLADO", iDTRASLADO) :
                new ObjectParameter("IDTRASLADO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListadoDetalleRemision_Result>("usp_ListadoDetalleRemision", iDTRASLADOParameter);
        }
    
        public virtual ObjectResult<usp_LisTickedPesadaEnProceso_Result> usp_LisTickedPesadaEnProceso(Nullable<int> idProceso, string idLocal, Nullable<int> idCliente, Nullable<int> idEstado)
        {
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("IdProceso", idProceso) :
                new ObjectParameter("IdProceso", typeof(int));
    
            var idLocalParameter = idLocal != null ?
                new ObjectParameter("IdLocal", idLocal) :
                new ObjectParameter("IdLocal", typeof(string));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisTickedPesadaEnProceso_Result>("usp_LisTickedPesadaEnProceso", idProcesoParameter, idLocalParameter, idClienteParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<usp_LisTicketPesada_Result> usp_LisTicketPesada(string eSTADO, string fILTRO, string iDLOCAL, string fechaInicio, string fechaFin)
        {
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            var fILTROParameter = fILTRO != null ?
                new ObjectParameter("FILTRO", fILTRO) :
                new ObjectParameter("FILTRO", typeof(string));
    
            var iDLOCALParameter = iDLOCAL != null ?
                new ObjectParameter("IDLOCAL", iDLOCAL) :
                new ObjectParameter("IDLOCAL", typeof(string));
    
            var fechaInicioParameter = fechaInicio != null ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(string));
    
            var fechaFinParameter = fechaFin != null ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisTicketPesada_Result>("usp_LisTicketPesada", eSTADOParameter, fILTROParameter, iDLOCALParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<usp_LisTipoCafe_Result> usp_LisTipoCafe(string eSTADO)
        {
            var eSTADOParameter = eSTADO != null ?
                new ObjectParameter("ESTADO", eSTADO) :
                new ObjectParameter("ESTADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisTipoCafe_Result>("usp_LisTipoCafe", eSTADOParameter);
        }
    
        public virtual ObjectResult<usp_LisTipoRuma_Result> usp_LisTipoRuma(string iDLOCAL, string iDESTADO)
        {
            var iDLOCALParameter = iDLOCAL != null ?
                new ObjectParameter("IDLOCAL", iDLOCAL) :
                new ObjectParameter("IDLOCAL", typeof(string));
    
            var iDESTADOParameter = iDESTADO != null ?
                new ObjectParameter("IDESTADO", iDESTADO) :
                new ObjectParameter("IDESTADO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisTipoRuma_Result>("usp_LisTipoRuma", iDLOCALParameter, iDESTADOParameter);
        }
    
        public virtual ObjectResult<usp_Mant_CLIENTE_COSECHA_Result> usp_Mant_CLIENTE_COSECHA(Nullable<int> bUS, Nullable<int> idClienteCosecha, Nullable<int> idCosecha, Nullable<int> idCliente, Nullable<int> inEstado, Nullable<int> usuarioModifica, Nullable<int> usuarioRegistro, Nullable<int> inVigente)
        {
            var bUSParameter = bUS.HasValue ?
                new ObjectParameter("BUS", bUS) :
                new ObjectParameter("BUS", typeof(int));
    
            var idClienteCosechaParameter = idClienteCosecha.HasValue ?
                new ObjectParameter("IdClienteCosecha", idClienteCosecha) :
                new ObjectParameter("IdClienteCosecha", typeof(int));
    
            var idCosechaParameter = idCosecha.HasValue ?
                new ObjectParameter("IdCosecha", idCosecha) :
                new ObjectParameter("IdCosecha", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var inEstadoParameter = inEstado.HasValue ?
                new ObjectParameter("InEstado", inEstado) :
                new ObjectParameter("InEstado", typeof(int));
    
            var usuarioModificaParameter = usuarioModifica.HasValue ?
                new ObjectParameter("UsuarioModifica", usuarioModifica) :
                new ObjectParameter("UsuarioModifica", typeof(int));
    
            var usuarioRegistroParameter = usuarioRegistro.HasValue ?
                new ObjectParameter("UsuarioRegistro", usuarioRegistro) :
                new ObjectParameter("UsuarioRegistro", typeof(int));
    
            var inVigenteParameter = inVigente.HasValue ?
                new ObjectParameter("InVigente", inVigente) :
                new ObjectParameter("InVigente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Mant_CLIENTE_COSECHA_Result>("usp_Mant_CLIENTE_COSECHA", bUSParameter, idClienteCosechaParameter, idCosechaParameter, idClienteParameter, inEstadoParameter, usuarioModificaParameter, usuarioRegistroParameter, inVigenteParameter);
        }
    
        public virtual ObjectResult<usp_Mant_TIPO_COSECHA_Result> usp_Mant_TIPO_COSECHA(Nullable<int> bUS, Nullable<int> idCosecha, string vcCosecha, string vcComentario, Nullable<int> idEstado, Nullable<int> usuarioRegistro, Nullable<int> usuarioModifica)
        {
            var bUSParameter = bUS.HasValue ?
                new ObjectParameter("BUS", bUS) :
                new ObjectParameter("BUS", typeof(int));
    
            var idCosechaParameter = idCosecha.HasValue ?
                new ObjectParameter("IdCosecha", idCosecha) :
                new ObjectParameter("IdCosecha", typeof(int));
    
            var vcCosechaParameter = vcCosecha != null ?
                new ObjectParameter("vcCosecha", vcCosecha) :
                new ObjectParameter("vcCosecha", typeof(string));
    
            var vcComentarioParameter = vcComentario != null ?
                new ObjectParameter("vcComentario", vcComentario) :
                new ObjectParameter("vcComentario", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var usuarioRegistroParameter = usuarioRegistro.HasValue ?
                new ObjectParameter("UsuarioRegistro", usuarioRegistro) :
                new ObjectParameter("UsuarioRegistro", typeof(int));
    
            var usuarioModificaParameter = usuarioModifica.HasValue ?
                new ObjectParameter("UsuarioModifica", usuarioModifica) :
                new ObjectParameter("UsuarioModifica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Mant_TIPO_COSECHA_Result>("usp_Mant_TIPO_COSECHA", bUSParameter, idCosechaParameter, vcCosechaParameter, vcComentarioParameter, idEstadoParameter, usuarioRegistroParameter, usuarioModificaParameter);
        }
    
        public virtual ObjectResult<usp_ReporteGuiaIngreso_Result> usp_ReporteGuiaIngreso(Nullable<int> iDGUIAINGRESO)
        {
            var iDGUIAINGRESOParameter = iDGUIAINGRESO.HasValue ?
                new ObjectParameter("IDGUIAINGRESO", iDGUIAINGRESO) :
                new ObjectParameter("IDGUIAINGRESO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReporteGuiaIngreso_Result>("usp_ReporteGuiaIngreso", iDGUIAINGRESOParameter);
        }
    
        public virtual ObjectResult<usp_ReporteTicketPesada_Result> usp_ReporteTicketPesada(Nullable<int> iDTICKETPESADA)
        {
            var iDTICKETPESADAParameter = iDTICKETPESADA.HasValue ?
                new ObjectParameter("IDTICKETPESADA", iDTICKETPESADA) :
                new ObjectParameter("IDTICKETPESADA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReporteTicketPesada_Result>("usp_ReporteTicketPesada", iDTICKETPESADAParameter);
        }
    
        public virtual int usp_UpdGuiaIngresoRendHumZona(Nullable<int> gUIAINGRESO)
        {
            var gUIAINGRESOParameter = gUIAINGRESO.HasValue ?
                new ObjectParameter("GUIAINGRESO", gUIAINGRESO) :
                new ObjectParameter("GUIAINGRESO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdGuiaIngresoRendHumZona", gUIAINGRESOParameter);
        }
    
        public virtual ObjectResult<usp_LisContratoConGI_Result> usp_LisContratoConGI(Nullable<int> iDCLIENTE, Nullable<int> cOSECHA)
        {
            var iDCLIENTEParameter = iDCLIENTE.HasValue ?
                new ObjectParameter("IDCLIENTE", iDCLIENTE) :
                new ObjectParameter("IDCLIENTE", typeof(int));
    
            var cOSECHAParameter = cOSECHA.HasValue ?
                new ObjectParameter("COSECHA", cOSECHA) :
                new ObjectParameter("COSECHA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LisContratoConGI_Result>("usp_LisContratoConGI", iDCLIENTEParameter, cOSECHAParameter);
        }
    
        public virtual ObjectResult<LisClienteContacto> usp_LisClienteContacto(Nullable<int> idCliente, string idEstado)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idEstadoParameter = idEstado != null ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LisClienteContacto>("usp_LisClienteContacto", idClienteParameter, idEstadoParameter);
        }
    
        public virtual int usp_InsGuiaIngresoDetalle(Nullable<int> idGuia, Nullable<int> idTicketPesada, Nullable<int> idOrdenServicio, Nullable<int> idResultado, Nullable<int> nroSaco, Nullable<decimal> kgBruto, Nullable<decimal> tara, Nullable<decimal> kgNeto)
        {
            var idGuiaParameter = idGuia.HasValue ?
                new ObjectParameter("IdGuia", idGuia) :
                new ObjectParameter("IdGuia", typeof(int));
    
            var idTicketPesadaParameter = idTicketPesada.HasValue ?
                new ObjectParameter("IdTicketPesada", idTicketPesada) :
                new ObjectParameter("IdTicketPesada", typeof(int));
    
            var idOrdenServicioParameter = idOrdenServicio.HasValue ?
                new ObjectParameter("IdOrdenServicio", idOrdenServicio) :
                new ObjectParameter("IdOrdenServicio", typeof(int));
    
            var idResultadoParameter = idResultado.HasValue ?
                new ObjectParameter("IdResultado", idResultado) :
                new ObjectParameter("IdResultado", typeof(int));
    
            var nroSacoParameter = nroSaco.HasValue ?
                new ObjectParameter("NroSaco", nroSaco) :
                new ObjectParameter("NroSaco", typeof(int));
    
            var kgBrutoParameter = kgBruto.HasValue ?
                new ObjectParameter("KgBruto", kgBruto) :
                new ObjectParameter("KgBruto", typeof(decimal));
    
            var taraParameter = tara.HasValue ?
                new ObjectParameter("Tara", tara) :
                new ObjectParameter("Tara", typeof(decimal));
    
            var kgNetoParameter = kgNeto.HasValue ?
                new ObjectParameter("KgNeto", kgNeto) :
                new ObjectParameter("KgNeto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsGuiaIngresoDetalle", idGuiaParameter, idTicketPesadaParameter, idOrdenServicioParameter, idResultadoParameter, nroSacoParameter, kgBrutoParameter, taraParameter, kgNetoParameter);
        }
    
        public virtual int usp_InsGuiaIngresoSaldo(Nullable<int> idGuia, Nullable<int> idTicketPesada, Nullable<int> idCliente, Nullable<int> cosecha, Nullable<int> saco, Nullable<decimal> kgBruto, Nullable<decimal> tara, Nullable<decimal> kgNeto, Nullable<int> sacoOperacion, Nullable<decimal> kgBrutoOperacion, Nullable<decimal> taraOperacion, Nullable<decimal> kgNetoOperacion, Nullable<int> sacoSaldo, Nullable<decimal> kgBrutoSaldo, Nullable<decimal> taraSaldo, Nullable<decimal> kgNetoSaldo, Nullable<int> idEstado, string usuarioRegistro)
        {
            var idGuiaParameter = idGuia.HasValue ?
                new ObjectParameter("IdGuia", idGuia) :
                new ObjectParameter("IdGuia", typeof(int));
    
            var idTicketPesadaParameter = idTicketPesada.HasValue ?
                new ObjectParameter("IdTicketPesada", idTicketPesada) :
                new ObjectParameter("IdTicketPesada", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var cosechaParameter = cosecha.HasValue ?
                new ObjectParameter("Cosecha", cosecha) :
                new ObjectParameter("Cosecha", typeof(int));
    
            var sacoParameter = saco.HasValue ?
                new ObjectParameter("Saco", saco) :
                new ObjectParameter("Saco", typeof(int));
    
            var kgBrutoParameter = kgBruto.HasValue ?
                new ObjectParameter("KgBruto", kgBruto) :
                new ObjectParameter("KgBruto", typeof(decimal));
    
            var taraParameter = tara.HasValue ?
                new ObjectParameter("Tara", tara) :
                new ObjectParameter("Tara", typeof(decimal));
    
            var kgNetoParameter = kgNeto.HasValue ?
                new ObjectParameter("KgNeto", kgNeto) :
                new ObjectParameter("KgNeto", typeof(decimal));
    
            var sacoOperacionParameter = sacoOperacion.HasValue ?
                new ObjectParameter("SacoOperacion", sacoOperacion) :
                new ObjectParameter("SacoOperacion", typeof(int));
    
            var kgBrutoOperacionParameter = kgBrutoOperacion.HasValue ?
                new ObjectParameter("KgBrutoOperacion", kgBrutoOperacion) :
                new ObjectParameter("KgBrutoOperacion", typeof(decimal));
    
            var taraOperacionParameter = taraOperacion.HasValue ?
                new ObjectParameter("TaraOperacion", taraOperacion) :
                new ObjectParameter("TaraOperacion", typeof(decimal));
    
            var kgNetoOperacionParameter = kgNetoOperacion.HasValue ?
                new ObjectParameter("KgNetoOperacion", kgNetoOperacion) :
                new ObjectParameter("KgNetoOperacion", typeof(decimal));
    
            var sacoSaldoParameter = sacoSaldo.HasValue ?
                new ObjectParameter("SacoSaldo", sacoSaldo) :
                new ObjectParameter("SacoSaldo", typeof(int));
    
            var kgBrutoSaldoParameter = kgBrutoSaldo.HasValue ?
                new ObjectParameter("KgBrutoSaldo", kgBrutoSaldo) :
                new ObjectParameter("KgBrutoSaldo", typeof(decimal));
    
            var taraSaldoParameter = taraSaldo.HasValue ?
                new ObjectParameter("TaraSaldo", taraSaldo) :
                new ObjectParameter("TaraSaldo", typeof(decimal));
    
            var kgNetoSaldoParameter = kgNetoSaldo.HasValue ?
                new ObjectParameter("KgNetoSaldo", kgNetoSaldo) :
                new ObjectParameter("KgNetoSaldo", typeof(decimal));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var usuarioRegistroParameter = usuarioRegistro != null ?
                new ObjectParameter("UsuarioRegistro", usuarioRegistro) :
                new ObjectParameter("UsuarioRegistro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsGuiaIngresoSaldo", idGuiaParameter, idTicketPesadaParameter, idClienteParameter, cosechaParameter, sacoParameter, kgBrutoParameter, taraParameter, kgNetoParameter, sacoOperacionParameter, kgBrutoOperacionParameter, taraOperacionParameter, kgNetoOperacionParameter, sacoSaldoParameter, kgBrutoSaldoParameter, taraSaldoParameter, kgNetoSaldoParameter, idEstadoParameter, usuarioRegistroParameter);
        }
    
        public virtual int usp_InsSaldoCertificado(string iDGUIA, string iDCLIENTE, string cOSECHA, string oPERACION, string sELLO, string tIPOOPERACION)
        {
            var iDGUIAParameter = iDGUIA != null ?
                new ObjectParameter("IDGUIA", iDGUIA) :
                new ObjectParameter("IDGUIA", typeof(string));
    
            var iDCLIENTEParameter = iDCLIENTE != null ?
                new ObjectParameter("IDCLIENTE", iDCLIENTE) :
                new ObjectParameter("IDCLIENTE", typeof(string));
    
            var cOSECHAParameter = cOSECHA != null ?
                new ObjectParameter("COSECHA", cOSECHA) :
                new ObjectParameter("COSECHA", typeof(string));
    
            var oPERACIONParameter = oPERACION != null ?
                new ObjectParameter("OPERACION", oPERACION) :
                new ObjectParameter("OPERACION", typeof(string));
    
            var sELLOParameter = sELLO != null ?
                new ObjectParameter("SELLO", sELLO) :
                new ObjectParameter("SELLO", typeof(string));
    
            var tIPOOPERACIONParameter = tIPOOPERACION != null ?
                new ObjectParameter("TIPOOPERACION", tIPOOPERACION) :
                new ObjectParameter("TIPOOPERACION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsSaldoCertificado", iDGUIAParameter, iDCLIENTEParameter, cOSECHAParameter, oPERACIONParameter, sELLOParameter, tIPOOPERACIONParameter);
        }
    
        public virtual ObjectResult<usp_ListIngresoSaldo_Result> usp_ListIngresoSaldo(Nullable<int> idGuia)
        {
            var idGuiaParameter = idGuia.HasValue ?
                new ObjectParameter("IdGuia", idGuia) :
                new ObjectParameter("IdGuia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListIngresoSaldo_Result>("usp_ListIngresoSaldo", idGuiaParameter);
        }
    
        public virtual ObjectResult<LisDatosGeneraCodigoBarra> usp_LisDatosGeneraCodigoBarra(Nullable<int> idComprobante)
        {
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LisDatosGeneraCodigoBarra>("usp_LisDatosGeneraCodigoBarra", idComprobanteParameter);
        }
    }
}
